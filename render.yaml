services:
  # Frontend Service
  - type: web
    name: todo-list-frontend
    env: docker
    dockerfilePath: ./frontend/Dockerfile # Path to frontend Dockerfile
    autoDeploy: true
    buildCommand: npm install && npm run build # This will build your React app
    startCommand: npm run dev # This will start the frontend development server
    healthCheckPath: /
    envVars:
      - key: CHOKIDAR_USEPOLLING
        value: "true" # For watching files correctly in some setups
    ports:
      - name: http
        port: 5173

  # Backend Service (PHP + MySQL)
  - type: web
    name: todo-list-backend
    env: docker
    dockerfilePath: ./backend/Dockerfile # Path to backend Dockerfile
    autoDeploy: true
    healthCheckPath: /
    envVars:
      - key: MYSQL_ROOT_PASSWORD
        value: root
      - key: MYSQL_DATABASE
        value: todo_list
      - key: MYSQL_USER
        value: root
      - key: MYSQL_PASSWORD
        value: root
    ports:
      - name: http
        port: 8080

  # MySQL Database (Private Service)
  - type: privateService
    name: todo-list-db
    env: docker
    dockerfilePath: ./backend/Dockerfile
    startCommand: docker-compose up db
    envVars:
      - key: MYSQL_ROOT_PASSWORD
        value: root
      - key: MYSQL_DATABASE
        value: todo_list

  # phpMyAdmin Service (for managing the database)
  - type: web
    name: todo-list-phpmyadmin
    env: docker
    dockerfilePath: ./backend/Dockerfile
    buildCommand: docker-compose build phpmyadmin
    startCommand: docker-compose up phpmyadmin
    ports:
      - name: http
        port: 8081
